@use "chartist/dist/scss/chartist";
@use "chartist-plugin-tooltips-updated/dist/chartist-plugin-tooltip";

@use "@material/shape" with (
  $small-component-radius: 4px,
  $medium-component-radius: 4px,
  $large-component-radius: 0px
);

@use "typography-variables";

@use "@material/typography" with (
  $font-family: typography-variables.$body-font,
  $styles-headline1: typography-variables.$headline1,
  $styles-headline2: typography-variables.$headline2,
  $styles-headline3: typography-variables.$headline3,
  $styles-headline4: typography-variables.$headline4,
  $styles-headline5: typography-variables.$headline5,
  $styles-headline6: typography-variables.$headline6,
  $styles-body1: typography-variables.$body1,
  $styles-body2: typography-variables.$body2,
  $styles-subtitle1: typography-variables.$subtitle1,
  $styles-subtitle2: typography-variables.$subtitle2,
  $styles-button: typography-variables.$button,
  $styles-overline: typography-variables.$overline,
  $styles-caption: typography-variables.$caption
);

@use "theme";
@use "density";
@use "util";

@use "@material/button/mdc-button";
@use "@material/card/mdc-card";
@use "@material/checkbox/mdc-checkbox";
@use "@material/chips/mdc-chips";
@use "@material/data-table/mdc-data-table";
@use "@material/dialog/mdc-dialog";
@use "@material/drawer/mdc-drawer";
@use "@material/fab/mdc-fab";
@use "@material/floating-label/mdc-floating-label";
@use "@material/form-field/mdc-form-field";
@use "@material/icon-button/mdc-icon-button";
@use "@material/image-list/mdc-image-list";
@use "@material/line-ripple/mdc-line-ripple";
@use "@material/linear-progress/mdc-linear-progress";
@use "@material/list/mdc-list";
@use "@material/menu-surface/mdc-menu-surface";
@use "@material/menu/mdc-menu";
@use "@material/notched-outline/mdc-notched-outline";
@use "@material/radio/mdc-radio";
@use "@material/select/mdc-select";
@use "@material/slider/mdc-slider";
@use "@material/snackbar/mdc-snackbar";
@use "@material/switch/mdc-switch";
@use "@material/tab-bar/mdc-tab-bar";
@use "@material/tab-indicator/mdc-tab-indicator";
@use "@material/tab-scroller/mdc-tab-scroller";
@use "@material/tab/mdc-tab";
@use "@material/textfield/mdc-text-field";
@use "@material/top-app-bar/mdc-top-app-bar";
@use "@rmwc/avatar/avatar";
@use "@rmwc/badge/badge";
@use "@rmwc/circular-progress/circular-progress";
@use "@rmwc/data-table/data-table";
@use "@rmwc/list/collapsible-list";
@use "@rmwc/tooltip/tooltip";

@use "@material/animation/_index" as animation;
@use "@material/list/_index" as list;
@use "@material/theme/color-palette" as palette;
@use "@material/rtl/_index" as rtl;
@use "@material/top-app-bar/_index" as top-app-bar;

@include typography.core-styles();

.mdc-drawer {
  &.drawer-bottom {
    width: 100%;
    height: auto;
    max-height: 100%;
    border-width: 1px 0 0;
    border-top-style: solid;
    &.mdc-drawer--animate {
      transform: translateY(101%);
    }
    &.mdc-drawer--opening {
      transform: translateY(0);
    }
    &.mdc-drawer--closing {
      transform: translateY(101%);
    }
    @include shape.radius(large large 0 0);
  }
  &.drawer-right {
    width: 320px;
    border-right-width: 0;
    border-left-width: 1px;
    border-right-style: none;
    border-left-style: solid;
    @include rtl.reflexive-position(left, initial);
    @include rtl.reflexive-position(right, 0);
    &.mdc-drawer--animate,
    &.mdc-drawer--closing {
      transform: translateX(100%);
      @include rtl.rtl {
        transform: translateX(-100%);
      }
    }
    &.mdc-drawer--opening {
      transform: translateX(0);
      @include rtl.rtl {
        transform: translateX(0);
      }
    }
    &.mdc-drawer--open.mdc-drawer--dismissible:not(.mdc-drawer--closing) ~ .mdc-drawer-app-content {
      @include rtl.reflexive-property(margin, 0, 320px);
    }
    @include rtl.rtl {
      border-left-width: 0;
      border-right-width: 1px;
      border-left-style: none;
      border-right-style: solid;
      left: 0;
      right: initial;
    }
    @include shape.radius(large 0 0 large, true);
  }
  &__header {
    .mdc-icon-button:last-child {
      @include rtl.reflexive-box(margin, right, -12px);
    }
  }
  &__content {
    overflow-x: hidden;
  }
  .mdc-list-item,
  .mdc-list-item:first-child {
    margin: 0;
    @include shape.radius(0);
    box-sizing: border-box;
  }
  .mdc-menu .mdc-list-item {
    height: 56px;
    @include typography.typography(subtitle1);
  }
  .content-container &.mdc-drawer--dismissible {
    height: calc(100% - #{top-app-bar.$row-height});
  }
  @media (max-width: top-app-bar.$mobile-breakpoint) {
    .content-container &.mdc-drawer--dismissible {
      height: calc(100% - #{top-app-bar.$mobile-row-height});
    }
  }
}

.mdc-image-list__item {
  @include shape.radius(medium);
}

.mdc-linear-progress {
  @include rtl.rtl {
    transform: scaleX(-1);
  }
}

.mdc-list {
  &.theme-list {
    @include shape.radius(shape.resolve-percentage-radius(list.$single-line-height, small));
  }
  &--two-line.three-line .mdc-list-item,
  &-item.three-line {
    height: 88px;
    .mdc-list-item__text {
      align-self: unset;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      .overline {
        @include typography.typography(overline);
        font-family: inherit;
        line-height: 1rem;
      }
      .mdc-list-item__primary-text {
        margin: 2px 0;
        display: flex;
        align-items: center;
        &::before,
        &::after {
          content: none;
        }
      }
      .mdc-list-item__secondary-text {
        &::before {
          content: none;
        }
      }
    }
  }
}

.mdc-button.mdc-button--outlined,
.mdc-card.mdc-card--outlined,
.mdc-drawer,
.mdc-list-divider,
.mdc-data-table,
.mdc-data-table__row,
.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__title,
.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__actions {
  border-color: var(--divider-color);
}

.material-icons,
.mdc-button,
.time-indicator,
.mdc-card__primary-action,
.profile-title,
.mdc-list-item,
.mdc-image-list__item,
.mdc-tab,
.mdc-top-app-bar {
  user-select: none;
}

.ct-chart {
  .ct-grid {
    stroke: var(--divider-color);
    stroke-dasharray: 4px;
  }
  .ct-axis-title {
    @include typography.typography(caption);
  }
}

.mdc-ripple-upgraded::before {
  transition-duration: 100ms !important;
}

.rmwc-data-table__head-cell--sorted .rmwc-data-table__sort-icon {
  transform: rotate(0);
}

.rmwc-collapsible-list--open > .rmwc-collapsible-list__handle .mdc-list-item__meta,
.mdc-select--activated .mdc-select__dropdown-icon,
.rmwc-data-table__head-cell--sorted.rmwc-data-table__head-cell--sorted-ascending .rmwc-data-table__sort-icon,
.rmwc-data-table__sort-icon {
  transform: rotate(180deg);
}

.rmwc-avatar {
  background-color: var(--divider-color);
}

.rmwc-badge.material-icons {
  text-transform: none;
  font-size: 18px;
  line-height: 18px;
  width: 26px;
  height: 26px;
  padding: 4px;
  &.rmwc-badge--align-start,
  &.rmwc-badge--align-end {
    top: -13px;
  }
  &.rmwc-badge--align-start,
  [dir="rtl"] &.rmwc-badge--align-end {
    left: -13px;
    right: auto;
  }
  &.rmwc-badge--align-end,
  [dir="rtl"] &.rmwc-badge--align-start {
    right: -13px;
    left: auto;
  }
}

.banner {
  height: 54px;
  display: flex;
  justify-content: stretch;
  @include util.divider-border(bottom);
  &-text {
    @include typography.typography(body2);
    display: flex;
    align-items: center;
    flex-grow: 1;
    @include rtl.reflexive-box(padding, left, 16px);
  }
  &-button {
    display: flex;
    justify-content: flex-end;
    padding: 8px 16px;
    a {
      text-decoration: none;
    }
  }
}

.rmwc-tooltip {
  @include typography.typography(caption);
  &-inner {
    @include shape.radius(shape.resolve-percentage-radius(2rem, small));
  }
}

.mdc-slider {
  &__thumb-container {
    height: auto;
  }
  &__pin {
    display: flex;
    align-items: center;
    transform: scale(0) translateX(-50%);
    transform-origin: bottom left;
    @include shape.radius(shape.resolve-percentage-radius(2rem, small));
    min-height: 2rem;
    padding: 0.33rem 1rem;
    width: auto;
    height: auto;
    margin: 0;
    top: auto;
    bottom: 25px;
    left: 50%;
    will-change: transform;
    transition-duration: 200ms;
    transition-timing-function: animation.$standard-curve-timing-function;
    &-value-marker {
      @include typography.typography(caption);
      transform: none;
    }
    &::before {
      content: "";
      position: absolute;
      width: 0;
      height: 0;
      border-color: transparent;
      border-style: solid;
      left: 50%;
      bottom: -6px;
      margin-left: -6px;
      border-width: 6px 6px 0;
    }
  }
  &--discrete.mdc-slider--active {
    .mdc-slider__pin {
      transform: scale(1) translateX(-50%);
    }
  }
}

@media (min-width: 768px) {
  .mdc-slider__pin {
    padding: 0.33rem 0.5rem;
    min-height: 1.5rem;
  }
}
.mdc-chip {
  &[disabled] {
    cursor: default;
    .mdc-chip__ripple {
      &::before,
      &::after {
        content: none;
      }
    }
  }
}

.mdc-data-table {
  background-color: transparent;
  &.rounded {
    border-radius: shape.resolve-percentage-radius(56px, small) shape.resolve-percentage-radius(56px, small)
      shape.resolve-percentage-radius(52px, small) shape.resolve-percentage-radius(52px, small);
  }
  .mdc-data-table__header-row {
    .mdc-data-table__header-cell {
      @include typography.typography(subtitle2);
      font-weight: bold;
      vertical-align: middle;
      .rmwc-data-table__sort-icon {
        width: 1.5rem;
        height: 1.5rem;
      }
    }
  }
  .mdc-data-table__row {
    transition: background-color 100ms;
    .mdc-data-table__cell {
      @include typography.typography(body2);
      overflow: visible;
    }
  }
}

svg.material-icons,
.material-icons svg {
  fill: currentColor;
}

.mdc-checkbox {
  &__checkmark {
    height: 10px;
    width: 10px;
    padding: 2px;
  }
  &__mixedmark {
    width: calc(100% - 6px);
  }
}

.chartist-tooltip {
  @include typography.typography(caption);
  @include shape.radius(shape.resolve-percentage-radius(2rem, small));
  animation: animation.standard(rmwcToolTipOut, 0.075s);
  text-align: left;
  text-decoration: none;
  display: flex;
  align-items: center;
  padding: 0.33rem 1rem;
  min-height: 2rem;
  min-width: 0;
  box-sizing: border-box;
  &::before {
    content: none !important;
  }
  &.tooltip-show {
    animation: animation.standard(rmwcToolTipIn, 0.15s);
  }
  &-meta {
    font-weight: bold;
  }
}

.ct-stroked-point {
  pointer-events: all !important;
  stroke: transparent;
  stroke-width: 24px;
}

.search-bar--persistent .search-bar-field.mdc-text-field {
  @include shape.radius(shape.resolve-percentage-radius(40px, small));
}

.sales-image,
.sales-image img,
.details-image,
.image-display {
  @include shape.radius(shape.resolve-percentage-radius(16px, medium));
}

.rtl-flip {
  @include rtl.rtl {
    transform: scaleX(-1);
    animation: none;
    opacity: 1;
  }
}

:focus {
  outline: none;
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes fade-in-scale {
  from {
    transform: scale(0.92);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes placeholder {
  from {
    background-color: var(--lighter-color);
  }
  50% {
    background-color: var(--divider-color);
  }
  to {
    background-color: var(--lighter-color);
  }
}

.light {
  $theme: (
    primary: palette.$teal-500,
    secondary: palette.$deep-orange-200,
    on-primary: black,
    on-secondary: black,
    background: palette.$grey-200,
    error: #b00020,
    on-error: white,
    surface: white,
    on-surface: black,
  );
  @include theme.theme($theme);
}

.sepia {
  $theme: (
    primary: palette.$teal-500,
    secondary: palette.$deep-orange-200,
    on-primary: black,
    on-secondary: black,
    background: #cac6ad,
    error: #b00020,
    on-error: white,
    surface: #e2dfd6,
    on-surface: #3d3d38,
  );
  @include theme.theme($theme);
}

.ocean {
  $theme: (
    primary: palette.$teal-200,
    secondary: palette.$light-green-200,
    on-primary: black,
    on-secondary: black,
    background: #1b2936,
    error: #cf6679,
    on-error: black,
    surface: #1b2936,
    on-surface: white,
  );
  @include theme.theme($theme, true);
}

.grey {
  $theme: (
    primary: palette.$teal-200,
    secondary: palette.$deep-orange-200,
    on-primary: black,
    on-secondary: black,
    background: #202125,
    error: #cf6679,
    on-error: black,
    surface: #202125,
    on-surface: white,
  );
  @include theme.theme($theme, true);
}

.deep-ocean {
  $theme: (
    primary: palette.$teal-200,
    secondary: palette.$light-green-200,
    on-primary: black,
    on-secondary: black,
    background: #1a2328,
    error: #cf6679,
    on-error: black,
    surface: #1a2328,
    on-surface: white,
  );
  @include theme.theme($theme, true);
}

.deep {
  $theme: (
    primary: palette.$teal-200,
    secondary: palette.$deep-orange-200,
    on-primary: black,
    on-secondary: black,
    background: #17161c,
    error: #cf6679,
    on-error: black,
    surface: #17161c,
    on-surface: white,
  );
  @include theme.theme($theme, true);
}

.dark {
  $theme: (
    primary: palette.$teal-200,
    secondary: palette.$deep-orange-200,
    on-primary: black,
    on-secondary: black,
    background: #121212,
    error: #cf6679,
    on-error: black,
    surface: #121212,
    on-surface: white,
  );
  @include theme.theme($theme, true);
}

.lich {
  $theme: (
    primary: #514163,
    secondary: #efc06e,
    on-primary: #efc06e,
    on-secondary: #403845,
    background: #decde7,
    error: #b00020,
    surface: lighten(#decde7, 5%),
    on-surface: black,
  );
  @include theme.theme($theme);
}
