@use "@material/button/_index" as button;
@use "@material/checkbox/_index" as checkbox;
@use "@material/chips/_index" as chips;
@use "@material/data-table/_index" as data-table;
@use "@material/icon-button/_index" as icon-button;
@use "@material/list/_index" as list;
@use "@material/radio/_index" as radio;
@use "@material/switch/_index" as switch;
@use "@material/tab-bar/_index" as tab-bar;
@use "@material/textfield/_index" as textfield;

@use "@material/density/_index" as density;
@use "@material/rtl/_index" as rtl;

@mixin density($density: 0) {
  .mdc-button {
    @include button.density($density);
  }
  .mdc-checkbox {
    @include checkbox.density($density);
  }
  .mdc-chip {
    @include chips.density($density);
  }
  .mdc-data-table {
    @include data-table.density($density);
  }
  .mdc-icon-button {
    @include icon-button.density($density);
  }
  .mdc-list {
    &:not(.mdc-list--two-line) {
      @include list.single-line-density($density);
    }
    &.mdc-list--two-line {
      .mdc-list-item {
        height: density.prop-value(
          (
            height: (
              default: 72px,
              maximum: 72px,
              minimum: 60px,
            ),
          ),
          $density,
          height
        );
        &__primary-text::before {
          height: 32px + (density.$interval / 2) * $density;
        }
      }
    }
    &.three-line .mdc-list-item,
    .three-line.mdc-list-item {
      height: density.prop-value(
        (
          height: (
            default: 88px,
            maximum: 88px,
            minimum: 72px,
          ),
        ),
        $density,
        height
      );
    }
  }
  .mdc-radio {
    @include radio.density($density);
    &.mdc-list-item__meta {
      @include rtl.reflexive-property(margin, auto, 0);
    }
  }
  .mdc-switch {
    @include switch.density($density);
  }
  .mdc-tab-bar {
    @include tab-bar.density($density);
  }
  .mdc-text-field:not(.search-bar-field) {
    &:not(.mdc-text-field--outlined) {
      @include textfield.density($density);
    }
    &.mdc-text-field--outlined {
      @include textfield.outlined-density($density);
      &.mdc-text-field--with-leading-icon {
        @include textfield.outlined-with-leading-icon-density($density);
      }
    }
  }
  .mdc-card {
    .text-row .text-container {
      .overline {
        margin-bottom: 4px + density.$interval * $density;
      }
      .title {
        padding-bottom: 8px + density.$interval * $density;
      }
    }
  }
  .mdc-drawer {
    &.nav {
      .mdc-list-item {
        height: density.prop-value(
          (
            height: (
              default: 56px,
              maximum: 56px,
              minimum: 44px,
            ),
          ),
          $density,
          height
        );
      }
    }
    &.details-drawer {
      .search-chips-container {
        height: 48px + density.$interval * $density;
      }
    }
    &.filter-drawer {
      .mdc-drawer__content .group:not(:last-child) {
        margin-bottom: 16px + density.$interval * $density;
      }
      .subheader {
        padding-bottom: 16px + density.$interval * $density;
      }
    }
  }
  .search-bar {
    &--persistent {
      height: density.prop-value(
        (
          height: (
            default: 40px,
            maximum: 40px,
            minimum: 28px,
          ),
        ),
        $density,
        height
      );
    }
  }
}

.density-comfortable {
  @include density(-1);
}

.density-compact {
  @include density(-2);
}
