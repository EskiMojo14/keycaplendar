openapi: 3.0.0
info:
  title: KeycapLendar API
  version: '1.0'
  contact:
    name: Ben Durrant
    email: keycaplendar@gmail.com
    url: 'https://discord.gg/zrcN3qF'
  termsOfService: 'https://keycaplendar.firebaseapp.com/terms'
  description: 'This is an API for https://keycaplendar.firebaseapp.com/'
servers:
  - url: 'https://us-central1-keycaplendar.cloudfunctions.net'
    description: Production
paths:
  /apiAuth:
    post:
      summary: Generate Token
      tags:
        - authentication
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  token:
                    type: string
                    minLength: 1
                required:
                  - token
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      operationId: post-apiAuth
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                key:
                  type: string
                  minLength: 1
                secret:
                  type: string
                  minLength: 1
              required:
                - key
                - secret
      description: 'Using your API key and secret, generate a session token that will be used in any other subsequent API requests.'
  /getAllKeysets:
    get:
      summary: Get All Keysets
      tags:
        - query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Keyset'
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      operationId: get-getAllKeysets
      description: Return all the keysets in the database
      parameters:
        - schema:
            type: string
            enum:
              - icDate
              - gbLaunch
              - gbEnd
          in: query
          name: dateFilter
          description: Type of date to filter by.
        - schema:
            type: string
            format: date
          in: query
          name: after
          description: Filter sets by dateFilter property to after date.
        - schema:
            type: string
            format: date
          in: query
          name: before
          description: Filter sets by dateFilter property to before date.
      security:
        - Bearer Token: []
    parameters: []
  /getKeysetById:
    get:
      summary: Get Keyset by ID
      tags:
        - query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keyset'
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      operationId: get-getKeysetById
      description: 'Retrieve one keyset from the database, by its ID.'
      security:
        - Bearer Token: []
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: 'The ID of the keyset you want to retrieve '
          required: true
    parameters: []
  '/getKeysetsByPage/{page}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Keyset'
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      operationId: get-getKeysetsByPage
    parameters:
      - schema:
          type: string
          enum:
            - calendar
            - live
            - ic
            - previous
            - timeline
            - archive
        name: page
        in: path
        required: true
components:
  schemas:
    Keyset:
      description: ''
      type: object
      x-examples: {}
      properties:
        id:
          type: string
        profile:
          type: string
        gbMonth:
          type: boolean
        sales:
          oneOf:
            - type: object
              properties:
                img:
                  type: string
                thirdParty:
                  type: boolean
            - type: string
        details:
          type: string
        notes:
          type: string
        icDate:
          type: string
        shipped:
          type: boolean
        gbEnd:
          type: string
        designer:
          type: array
          items:
            type: string
        gbLaunch:
          type: string
        vendors:
          type: array
          uniqueItems: true
          items:
            type: object
            properties:
              id:
                type: string
              region:
                type: string
              name:
                type: string
              storeLink:
                type: string
              endDate:
                type: string
            required:
              - region
              - name
        image:
          type: string
        colorway:
          type: string
        alias:
          type: string
      required:
        - id
        - profile
        - details
        - icDate
        - gbEnd
        - designer
        - gbLaunch
        - vendors
        - image
        - colorway
  securitySchemes:
    Bearer Token:
      type: http
      scheme: bearer
      description: Token used to authenticate all endpoints.
security:
  - API Key - 1: []
